import{w as d}from"./C34h2UdL.js";import{g as i}from"./RSIJn0f_.js";import{P as s}from"./Cw2352T2.js";import{a as w}from"./BdYHp-EM.js";const a=d([]),g=d(0);let u="";function k(t){const r=`; ${document.cookie}`.split(`; ${t}=`);return r.length===2?r.pop().split(";").shift():null}async function l(){try{if(!k("tokenKey"))return;w.subscribe(m=>{u=m});const o=u;if(!o)return;const r=await fetch(`${s}/api/auth/username/${o}`,{headers:i()});if(!r.ok)throw new Error("Failed to get user ID");const h=(await r.json()).userId,c=await fetch(`${s}/api/notifications/${h}`,{headers:i()});if(!c.ok)throw new Error("Failed to fetch notifications");const f=await c.json();a.set(f),p(f)}catch(t){console.error("Error fetching notifications:",t)}}async function I(t){try{if(!(await fetch(`${s}/api/notifications/${t}/read`,{method:"PUT",headers:i()})).ok)throw new Error("Failed to mark notification as read");a.update(r=>r.map(n=>n.id===t?{...n,isRead:!0}:n)),a.subscribe(r=>{p(r)})()}catch(o){console.error("Error marking notification as read:",o)}}async function b(){try{const t=get(a);for(const o of t)o.isRead||await I(o.id)}catch(t){console.error("Error marking all notifications as read:",t)}}function p(t){const o=t.filter(r=>!r.isRead).length;g.set(o)}let e;function E(){e&&clearInterval(e),l(),e=setInterval(l,6e4)}function P(){e&&(clearInterval(e),e=null)}export{b as a,E as b,l as f,I as m,a as n,P as s,g as u};
