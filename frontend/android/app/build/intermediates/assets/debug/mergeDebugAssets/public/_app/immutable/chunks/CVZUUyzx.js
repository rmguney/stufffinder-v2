import{g as i}from"./RSIJn0f_.js";import{P as s}from"./pqZsTTMp.js";import{a as g}from"./zczyAANr.js";import{w as d}from"./3WS7gtyC.js";import{l as w}from"./CEgPK7Kn.js";const n=d([]),k=d(0);let l="";function I(t){const r=`; ${document.cookie}`.split(`; ${t}=`);return r.length===2?r.pop().split(";").shift():null}async function c(){try{if(!I("tokenKey"))return;g.subscribe(m=>{l=m});const o=l;if(!o)return;const r=await fetch(`${s}/api/auth/username/${o}`,{headers:i()});if(!r.ok)throw new Error("Failed to get user ID");const h=(await r.json()).userId,f=await fetch(`${s}/api/notifications/${h}`,{headers:i()});if(!f.ok)throw new Error("Failed to fetch notifications");const u=await f.json();n.set(u),p(u)}catch(t){console.error("Error fetching notifications:",t)}}async function v(t){try{if(!(await fetch(`${s}/api/notifications/${t}/read`,{method:"PUT",headers:i()})).ok)throw new Error("Failed to mark notification as read");n.update(r=>r.map(a=>a.id===t?{...a,isRead:!0}:a)),n.subscribe(r=>{p(r)})()}catch(o){console.error("Error marking notification as read:",o)}}async function P(){try{console.log(n);const t=w(n);for(const o of t)o.isRead||await v(o.id);c()}catch(t){console.error("Error marking all notifications as read:",t)}}function p(t){const o=t.filter(r=>!r.isRead).length;k.set(o)}let e;function U(){e&&clearInterval(e),c(),e=setInterval(c,6e4)}function A(){e&&(clearInterval(e),e=null)}export{P as a,U as b,c as f,v as m,n,A as s,k as u};
